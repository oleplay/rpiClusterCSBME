version: "3.5"
networks: 
    private:
        name: private
        driver: overlay
    public:
        name: public
        external: true
volumes: 
    prometheus_config:
        {}
    prometheus_data:
        {}
    grafana_data:
        {}
configs:
    prometheus_config:
        file: ./Configs/prometheus/prometheus.yml
    prometheus_alerts:
        file: ./Configs/prometheus/prometheus_rules.rules

services:
    prometheus:
        image: prom/prometheus
        user: root
        networks: 
            - private
            - public
        ports: 
            - 9090:9090
        hostname: "prometheus"
        configs:
            - source: prometheus_config
              target: /etc/prometheus/prometheus.yml
            - source: prometheus_alerts
              target: /etc/prometheus/alerts.rules
        volumes: 
            - prometheus_config:/etc/prometheus
            - prometheus_data:/prometheus
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
        deploy:
            placement:
                constraints:
                    # Only deploy on Manager node
                    - node.role==manager
    
    grafana:
        image: grafana/grafana
        networks: 
            - private
            - public
        ports:
            - 3000:3000
        volumes:
            - grafana_data:/var/lib/grafana
        environment: 
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_SERVER_DOMAIN=localhost
            - GF_SMTP_ENABLED=true
            - GF_SMTP_HOST=xxxxx:587
            - GF_SMTP_USER=xxxxxxx
            - GF_SMTP_PASSWORD=xxxxxxx
            - GF_SMTP_FROM_ADDRESS=grafana@xxxxxxxxxx.xx
            - PROMETHEUS_ENDPOINT=http://prometheus:9090
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.role==manager
    
    cadvisor:
        image: zcube/cadvisor
               # Not using google/cadvisor as no arm image is available
        networks: 
            - private
            - public
        ports: 
            - 8080:8080
        volumes: 
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
        deploy:
            # Deploy on all nodes
            mode: global
    
    node-exporter:
        image: prom/node-exporter
        networks:
            - private
        ports: 
            - 9100:9100
        volumes: 
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
            - /etc/hostname:/etc/node_hostname
        environment: 
            - HOST_HOSTNAME=/etc/node_hostname
        command: 
            - "--path.sysfs=/host/sys"
            - "--path.procfs=/host/proc"
            - "--collector.textfile.directory=/etc/node-exporter/"
            - '--collector.filesystem.ignored-mount-points'
            - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
        deploy:
            mode: global
    